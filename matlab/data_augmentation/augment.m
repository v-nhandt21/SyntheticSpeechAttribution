rawlabels = readtable("/home/nhandt23/Desktop/SPCUP/Data/all.csv");
filesCSV = string(rawlabels.track);
labels = int8(rawlabels.algorithm);

ffmpeg_path = '/usr/bin/';

id =fopen("/home/nhandt23/Desktop/SPCUP/Data/train_augment4.txt", "a+")
count = 0

for idx = 1:length(filesCSV)
     audio_path = "/home/nhandt23/Desktop/SPCUP/Data/part1/" + filesCSV(idx)

     origin_path = "/home/nhandt23/Desktop/SPCUP/Data/part2/" + filesCSV(idx)
     noise_path = "/home/nhandt23/Desktop/SPCUP/Data/part4/noise_" + filesCSV(idx)
     reverb_path2 = "/home/nhandt23/Desktop/SPCUP/Data/part4/reverb_" + filesCSV(idx)
     reverb_path = "/home/nhandt23/Desktop/SPCUP/Data/part4/reverb2_" + filesCSV(idx)
     noise_path2 = "/home/nhandt23/Desktop/SPCUP/Data/part4/noise2_" + filesCSV(idx)
     noise_path3 = "/home/nhandt23/Desktop/SPCUP/Data/part4/noise3_" + filesCSV(idx)
     noise_path4 = "/home/nhandt23/Desktop/SPCUP/Data/part4/noise4_" + filesCSV(idx)


     [audioIn, fs] = audioread(audio_path);

     audiowrite(origin_path, audioIn, fs);

     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Noise injection
     noise_probability = 1;
     SNR_min = 3;
     SNR_max = 10;
     
     SNR_value = (SNR_max-SNR_min).*rand(1,1000) + SNR_min;
     augmenter = audioDataAugmenter( ...
          "AugmentationParameterSource","specify", ...
          "AddNoiseProbability", noise_probability, ...
          "SNR", SNR_value, ...
          "ApplyTimeStretch", false,...
          "ApplyVolumeControl", false, ...
          "ApplyPitchShift", false, ...
          "ApplyTimeStretch", false, ...
          "ApplyTimeShift", false);
     data = augment(augmenter, audioIn, fs);
     audioAug = data.Audio{1};
     audiowrite(noise_path, audioAug, fs);

     SNR_value = (SNR_max-SNR_min).*rand(1,1000) + SNR_min;
     augmenter = audioDataAugmenter( ...
          "AugmentationParameterSource","specify", ...
          "AddNoiseProbability", noise_probability, ...
          "SNR", SNR_value, ...
          "ApplyTimeStretch", false,...
          "ApplyVolumeControl", false, ...
          "ApplyPitchShift", false, ...
          "ApplyTimeStretch", false, ...
          "ApplyTimeShift", false);
     data = augment(augmenter, audioIn, fs);
     audioAug = data.Audio{1};
     audiowrite(noise_path2, audioAug, fs);

     SNR_value = (SNR_max-SNR_min).*rand(1,1000) + SNR_min;
     augmenter = audioDataAugmenter( ...
          "AugmentationParameterSource","specify", ...
          "AddNoiseProbability", noise_probability, ...
          "SNR", SNR_value, ...
          "ApplyTimeStretch", false,...
          "ApplyVolumeControl", false, ...
          "ApplyPitchShift", false, ...
          "ApplyTimeStretch", false, ...
          "ApplyTimeShift", false);
     data = augment(augmenter, audioIn, fs);
     audioAug = data.Audio{1};
     audiowrite(noise_path3, audioAug, fs);

     SNR_value = (SNR_max-SNR_min).*rand(1,1000) + SNR_min;
     augmenter = audioDataAugmenter( ...
          "AugmentationParameterSource","specify", ...
          "AddNoiseProbability", noise_probability, ...
          "SNR", SNR_value, ...
          "ApplyTimeStretch", false,...
          "ApplyVolumeControl", false, ...
          "ApplyPitchShift", false, ...
          "ApplyTimeStretch", false, ...
          "ApplyTimeShift", false);
     data = augment(augmenter, audioIn, fs);
     audioAug = data.Audio{1};
     audiowrite(noise_path4, audioAug, fs);
     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Add reverberation
     predelay = 0;
     high_cf = 20000;
     diffusion = 0.5;
     decay = 0.5;
     hifreq_damp = 0.9;
     wetdry_mix = 0.25;
     fsamp = 16000;

     
     reverb = reverberator( ...
          "PreDelay", predelay, ...
          "HighCutFrequency", high_cf, ...
          "Diffusion", diffusion, ...
          "DecayFactor", decay, ...
          "HighFrequencyDamping", hifreq_damp, ...
          "WetDryMix", wetdry_mix, ...
          "SampleRate", fsamp);
     audioRev = reverb(audioIn);
     audioRev = .5*(audioRev(:,1) + audioRev(:,2));
     audiowrite(reverb_path, audioRev/max(abs(audioRev(:))), fs);

     reverb = reverberator( ...
          "PreDelay", predelay, ...
          "HighCutFrequency", high_cf, ...
          "Diffusion", diffusion, ...
          "DecayFactor", 0.6, ...
          "HighFrequencyDamping", hifreq_damp, ...
          "WetDryMix", wetdry_mix, ...
          "SampleRate", fsamp);
     audioRev = reverb(audioIn);
     audioRev = .5*(audioRev(:,1) + audioRev(:,2));
     audiowrite(reverb_path2, audioRev/max(abs(audioRev(:))), fs);


     
     fprintf(id,'%s %d \n',origin_path, labels(idx))
     fprintf(id,'%s %d \n',noise_path, labels(idx))
     fprintf(id,'%s %d \n',reverb_path, labels(idx))
     fprintf(id,'%s %d \n',reverb_path2, labels(idx))
     fprintf(id,'%s %d \n',noise_path2, labels(idx))
     fprintf(id,'%s %d \n',noise_path3, labels(idx))
     fprintf(id,'%s %d \n',noise_path4, labels(idx))
end
fclose(id);